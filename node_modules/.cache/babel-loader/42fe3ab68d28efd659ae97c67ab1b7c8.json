{"ast":null,"code":"var _jsxFileName = \"/Users/divyank/upGrad/Projects/CAPSTONE/Frontend/BookMyConsultationUI/src/common/header/Header.js\",\n    _s = $RefreshSig$();\n\n// import \"./Header.css\";\n// import logo from \"../../assets/logo.jpeg\";\n// import {\n//   Button,\n//   Card,\n//   CardContent,\n//   FormControl,\n//   FormHelperText,\n//   Input,\n//   InputLabel,\n//   Tab,\n//   Tabs,\n//   Typography,\n// } from \"@material-ui/core\";\n// import PropTypes from \"prop-types\";\n// import Modal from \"@material-ui/core/Modal\";\n// import React, { useState, useEffect } from \"react\";\n// //\n// function TabPanel(props) {\n//   const { children, value, index, ...other } = props;\n//   return (\n//     <div\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`simple-tabpanel-${index}`}\n//       aria-labelledby={`simple-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && <Typography component=\"span\">{children}</Typography>}\n//     </div>\n//   );\n// }\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired,\n// };\n// function a11yProps(index) {\n//   return {\n//     id: `simple-tab-${index}`,\n//     \"aria-controls\": `simple-tabpanel-${index}`,\n//   };\n// }\n// //\n// const modalStyle = {\n//   content: {\n//     top: \"50%\",\n//     left: \"50%\",\n//     right: \"auto\",\n//     bottom: \"auto\",\n//     marginRight: \"-50%\",\n//     transform: \"translate(-50%, -50%)\",\n//   },\n// };\n// const Header = () => {\n//   const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n//   useEffect(() => {\n//     const accessToken = sessionStorage.getItem(\"access-token\");\n//     if (accessToken) {\n//       setIsUserLoggedIn(true);\n//     }\n//   }, []);\n//   const [isOpen, setIsOpen] = useState(false);\n//   function openOrCloseModal() {\n//     console.log(\"clicked\");\n//     setIsOpen(!isOpen);\n//   }\n//   const [tabValue, setTabValue] = React.useState(0);\n//   const handleTabValueChange = (event, newValue) => {\n//     setTabValue(newValue);\n//   };\n//   return (\n//     <div>\n//       <div className=\"header-container\">\n//         <img src={logo} alt=\"logo loading...\" className=\"header-logo\" />\n//         {isUserLoggedIn ? (\n//           <Button\n//             variant=\"contained\"\n//             className=\"login-button\"\n//             color=\"secondary\"\n//           >\n//             LOGOUT\n//           </Button>\n//         ) : (\n//           <Button\n//             variant=\"contained\"\n//             className=\"login-button\"\n//             color=\"primary\"\n//             onClick={openOrCloseModal}\n//           >\n//             LOGIN\n//           </Button>\n//         )}\n//         <Modal\n//           ariaHideApp={false}\n//           open={isOpen}\n//           onClose={openOrCloseModal}\n//           contentLabel=\"Login-Register Modal\"\n//           style={modalStyle}\n//           centered\n//         ></Modal>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Header;\nimport React, { useState, useEffect } from \"react\";\nimport \"./Header.css\";\nimport Logo from \"../../assets/logo.svg\";\nimport { Button } from \"@material-ui/core\";\nimport Modal from \"react-modal\";\nimport { Tab } from \"@material-ui/core\";\nimport { Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { Typography } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { InputLabel } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\"; // TABPANEL FROM MATERIAL UI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n} // CUSTOM STYLES FOR LOGIN/REGISTER MODAL\n\n\nconst modalStyle = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n}; //HEADER FUNCTION\n\nexport default function Header(props) {\n  _s();\n\n  //OPEN/CLOSE LOGIN-REGISTER MODAL\n  const [isOpen, setIsOpen] = useState(false);\n\n  function openOrCloseModal() {\n    setIsOpen(!isOpen);\n  } //HANDLE MODAL TAB VALUES\n\n\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabValueChange = (event, newValue) => {\n    setTabValue(newValue);\n  }; //HANDLE USER LOGIN REQUEST\n\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usernameIsRequired, setUsernameIsRequired] = useState(false);\n  const [passwordIsRequired, setPasswordIsRequired] = useState(false);\n\n  function handleLoginRequest(e) {\n    e.preventDefault();\n    setUsernameIsRequired(username === \"\" ? true : false);\n    setPasswordIsRequired(password === \"\" ? true : false);\n    const userCredentials = window.btoa(username + \":\" + password);\n    const loginRequest = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        authorization: \"Basic \" + userCredentials\n      }\n    };\n    fetch(\"/api/v1/auth/login\", loginRequest).then(response => {\n      if (!response.ok) {\n        return response.json();\n      }\n\n      return response;\n    }).then(response => {\n      if (response.headers) {\n        sessionStorage.setItem(\"access-token\", response.headers.get(\"access-token\"));\n        updateLoginStatus(true);\n      } else {\n        console.log(response.body);\n      }\n    });\n  } //SET USER'S LOGIN STATUS\n\n\n  const [IsUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  useEffect(() => {\n    const accessToken = sessionStorage.getItem(\"access-token\");\n\n    if (accessToken) {\n      setIsUserLoggedIn(true);\n    }\n  }, []); //UPDATE USER'S LOGIN STATUS & CLOSE MODAL\n\n  const updateLoginStatus = loggedIn => {\n    setIsUserLoggedIn(loggedIn);\n\n    if (isOpen) {\n      openOrCloseModal();\n    }\n  }; //FUNCTION FOR LOGGING OUT\n\n\n  function handleLogoutRequest() {\n    const logoutRequest = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\")\n      }\n    };\n    fetch(\"/api/v1/auth/logout\", logoutRequest).then(response => {\n      if (response.status === 200) {\n        sessionStorage.removeItem(\"access-token\");\n        updateLoginStatus(false);\n      } else {\n        console.log(\"Invalid access token\");\n      }\n    });\n  } //HANDLE USER REGISTRATION REQUEST\n\n\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contactNo, setContactNo] = useState(\"\");\n  const [firstnameIsRequired, setFirstnameIsRequired] = useState(false);\n  const [lastnameIsRequired, setLastnameIsRequired] = useState(false);\n  const [emailIsRequired, setEmailIsRequired] = useState(false);\n  const [contactNoIsRequired, setContactNoISRequired] = useState(false);\n  const [PasswordIsRequired, setPasswordRequired] = useState(false);\n  const [registrationSuccessMsg, setRegistrationSuccessMsg] = useState();\n\n  function handleRegistrationRequest(e) {\n    e.preventDefault();\n    setFirstnameIsRequired(firstName === \"\" ? true : false);\n    setLastnameIsRequired(lastName === \"\" ? true : false);\n    setEmailIsRequired(email === \"\" ? true : false);\n    setPasswordRequired(password === \"\" ? true : false);\n    setContactNoISRequired(contactNo === \"\" ? true : false);\n    const userDetails = {\n      email_address: email,\n      first_name: firstName,\n      last_name: lastName,\n      mobile_number: contactNo,\n      password: password\n    };\n    const signupRequest = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify(userDetails)\n    };\n    fetch(\"/api/v1/signup\", signupRequest).then(response => response.json()).then(response => {\n      if (response.id) {\n        setRegistrationSuccessMsg(\"Registration successful. Please login!\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo\",\n        src: Logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), IsUserLoggedIn ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        style: {\n          float: \"right\"\n        },\n        onClick: handleLogoutRequest,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        style: {\n          float: \"right\"\n        },\n        onClick: openOrCloseModal,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }, this), props.movieId !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/BookShow/\" + props.movieId,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            style: {\n              float: \"right\",\n              marginRight: \"12px\"\n            },\n            children: \"BOOK SHOW\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        ariaHideApp: false,\n        isOpen: isOpen,\n        onRequestClose: openOrCloseModal,\n        contentLabel: \"Login-Register Modal\",\n        style: modalStyle,\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabValueChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Login\",\n            ...a11yProps(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Register\",\n            ...a11yProps(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 0,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"userName\",\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"username\",\n                value: username,\n                onChange: _ref => {\n                  let {\n                    target\n                  } = _ref;\n                  return setUsername(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), usernameIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"password\",\n                value: password,\n                onChange: _ref2 => {\n                  let {\n                    target\n                  } = _ref2;\n                  return setPassword(target.value);\n                },\n                type: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 17\n              }, this), passwordIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: e => {\n                handleLoginRequest(e);\n              },\n              style: {\n                float: \"center\"\n              },\n              children: \"LOGIN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 1,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"first-name\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"first-name\",\n                value: firstName,\n                onChange: _ref3 => {\n                  let {\n                    target\n                  } = _ref3;\n                  return setFirstName(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), firstnameIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"last-name\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"last-name\",\n                value: lastName,\n                onChange: _ref4 => {\n                  let {\n                    target\n                  } = _ref4;\n                  return setLastName(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this), lastnameIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"email-address\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"email-address\",\n                value: email,\n                onChange: _ref5 => {\n                  let {\n                    target\n                  } = _ref5;\n                  return setEmail(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 17\n              }, this), emailIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"new-password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"new-password\",\n                type: \"password\",\n                value: password,\n                onChange: _ref6 => {\n                  let {\n                    target\n                  } = _ref6;\n                  return setPassword(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this), PasswordIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 460,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"contact-no\",\n                children: \"Contact No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"contact-no\",\n                value: contactNo,\n                onChange: _ref7 => {\n                  let {\n                    target\n                  } = _ref7;\n                  return setContactNo(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this), contactNoIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: registrationSuccessMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                float: \"center\"\n              },\n              type: \"submit\",\n              onClick: e => {\n                handleRegistrationRequest(e);\n              },\n              children: \"REGISTER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"3voXGUY/6WfNdJDhChhqBbHSeH8=\");\n\n_c2 = Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","Tab","Tabs","PropTypes","Typography","FormControl","Input","InputLabel","Link","FormHelperText","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","modalStyle","content","top","left","right","bottom","marginRight","transform","Header","isOpen","setIsOpen","openOrCloseModal","tabValue","setTabValue","handleTabValueChange","event","newValue","username","setUsername","password","setPassword","usernameIsRequired","setUsernameIsRequired","passwordIsRequired","setPasswordIsRequired","handleLoginRequest","e","preventDefault","userCredentials","window","btoa","loginRequest","method","headers","Accept","authorization","fetch","then","response","ok","json","sessionStorage","setItem","get","updateLoginStatus","console","log","body","IsUserLoggedIn","setIsUserLoggedIn","accessToken","getItem","loggedIn","handleLogoutRequest","logoutRequest","status","removeItem","firstName","setFirstName","lastName","setLastName","email","setEmail","contactNo","setContactNo","firstnameIsRequired","setFirstnameIsRequired","lastnameIsRequired","setLastnameIsRequired","emailIsRequired","setEmailIsRequired","contactNoIsRequired","setContactNoISRequired","PasswordIsRequired","setPasswordRequired","registrationSuccessMsg","setRegistrationSuccessMsg","handleRegistrationRequest","userDetails","email_address","first_name","last_name","mobile_number","signupRequest","JSON","stringify","Logo","float","movieId","undefined","textAlign","target"],"sources":["/Users/divyank/upGrad/Projects/CAPSTONE/Frontend/BookMyConsultationUI/src/common/header/Header.js"],"sourcesContent":["// import \"./Header.css\";\n// import logo from \"../../assets/logo.jpeg\";\n// import {\n//   Button,\n//   Card,\n//   CardContent,\n//   FormControl,\n//   FormHelperText,\n//   Input,\n//   InputLabel,\n//   Tab,\n//   Tabs,\n//   Typography,\n// } from \"@material-ui/core\";\n// import PropTypes from \"prop-types\";\n\n// import Modal from \"@material-ui/core/Modal\";\n// import React, { useState, useEffect } from \"react\";\n\n// //\n// function TabPanel(props) {\n//   const { children, value, index, ...other } = props;\n//   return (\n//     <div\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`simple-tabpanel-${index}`}\n//       aria-labelledby={`simple-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && <Typography component=\"span\">{children}</Typography>}\n//     </div>\n//   );\n// }\n\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired,\n// };\n\n// function a11yProps(index) {\n//   return {\n//     id: `simple-tab-${index}`,\n//     \"aria-controls\": `simple-tabpanel-${index}`,\n//   };\n// }\n// //\n// const modalStyle = {\n//   content: {\n//     top: \"50%\",\n//     left: \"50%\",\n//     right: \"auto\",\n//     bottom: \"auto\",\n//     marginRight: \"-50%\",\n//     transform: \"translate(-50%, -50%)\",\n//   },\n// };\n\n// const Header = () => {\n//   const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n//   useEffect(() => {\n//     const accessToken = sessionStorage.getItem(\"access-token\");\n//     if (accessToken) {\n//       setIsUserLoggedIn(true);\n//     }\n//   }, []);\n\n//   const [isOpen, setIsOpen] = useState(false);\n//   function openOrCloseModal() {\n//     console.log(\"clicked\");\n//     setIsOpen(!isOpen);\n//   }\n\n//   const [tabValue, setTabValue] = React.useState(0);\n//   const handleTabValueChange = (event, newValue) => {\n//     setTabValue(newValue);\n//   };\n//   return (\n//     <div>\n//       <div className=\"header-container\">\n//         <img src={logo} alt=\"logo loading...\" className=\"header-logo\" />\n//         {isUserLoggedIn ? (\n//           <Button\n//             variant=\"contained\"\n//             className=\"login-button\"\n//             color=\"secondary\"\n//           >\n//             LOGOUT\n//           </Button>\n//         ) : (\n//           <Button\n//             variant=\"contained\"\n//             className=\"login-button\"\n//             color=\"primary\"\n//             onClick={openOrCloseModal}\n//           >\n//             LOGIN\n//           </Button>\n//         )}\n//         <Modal\n//           ariaHideApp={false}\n//           open={isOpen}\n//           onClose={openOrCloseModal}\n//           contentLabel=\"Login-Register Modal\"\n//           style={modalStyle}\n//           centered\n//         ></Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Header;\nimport React, { useState, useEffect } from \"react\";\nimport \"./Header.css\";\nimport Logo from \"../../assets/logo.svg\";\nimport { Button } from \"@material-ui/core\";\nimport Modal from \"react-modal\";\nimport { Tab } from \"@material-ui/core\";\nimport { Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { Typography } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { InputLabel } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\n// TABPANEL FROM MATERIAL UI\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Typography component=\"span\">{children}</Typography>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\n// CUSTOM STYLES FOR LOGIN/REGISTER MODAL\nconst modalStyle = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\n//HEADER FUNCTION\nexport default function Header(props) {\n  //OPEN/CLOSE LOGIN-REGISTER MODAL\n  const [isOpen, setIsOpen] = useState(false);\n  function openOrCloseModal() {\n    setIsOpen(!isOpen);\n  }\n\n  //HANDLE MODAL TAB VALUES\n  const [tabValue, setTabValue] = React.useState(0);\n  const handleTabValueChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  //HANDLE USER LOGIN REQUEST\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [usernameIsRequired, setUsernameIsRequired] = useState(false);\n  const [passwordIsRequired, setPasswordIsRequired] = useState(false);\n\n  function handleLoginRequest(e) {\n    e.preventDefault();\n    setUsernameIsRequired(username === \"\" ? true : false);\n    setPasswordIsRequired(password === \"\" ? true : false);\n    const userCredentials = window.btoa(username + \":\" + password);\n    const loginRequest = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        authorization: \"Basic \" + userCredentials,\n      },\n    };\n    fetch(\"/api/v1/auth/login\", loginRequest)\n      .then((response) => {\n        if (!response.ok) {\n          return response.json();\n        }\n        return response;\n      })\n      .then((response) => {\n        if (response.headers) {\n          sessionStorage.setItem(\n            \"access-token\",\n            response.headers.get(\"access-token\")\n          );\n          updateLoginStatus(true);\n        } else {\n          console.log(response.body);\n        }\n      });\n  }\n\n  //SET USER'S LOGIN STATUS\n  const [IsUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  useEffect(() => {\n    const accessToken = sessionStorage.getItem(\"access-token\");\n    if (accessToken) {\n      setIsUserLoggedIn(true);\n    }\n  }, []);\n\n  //UPDATE USER'S LOGIN STATUS & CLOSE MODAL\n  const updateLoginStatus = (loggedIn) => {\n    setIsUserLoggedIn(loggedIn);\n    if (isOpen) {\n      openOrCloseModal();\n    }\n  };\n\n  //FUNCTION FOR LOGGING OUT\n  function handleLogoutRequest() {\n    const logoutRequest = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\n      },\n    };\n    fetch(\"/api/v1/auth/logout\", logoutRequest).then((response) => {\n      if (response.status === 200) {\n        sessionStorage.removeItem(\"access-token\");\n        updateLoginStatus(false);\n      } else {\n        console.log(\"Invalid access token\");\n      }\n    });\n  }\n\n  //HANDLE USER REGISTRATION REQUEST\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [contactNo, setContactNo] = useState(\"\");\n  const [firstnameIsRequired, setFirstnameIsRequired] = useState(false);\n  const [lastnameIsRequired, setLastnameIsRequired] = useState(false);\n  const [emailIsRequired, setEmailIsRequired] = useState(false);\n  const [contactNoIsRequired, setContactNoISRequired] = useState(false);\n  const [PasswordIsRequired, setPasswordRequired] = useState(false);\n  const [registrationSuccessMsg, setRegistrationSuccessMsg] = useState();\n\n  function handleRegistrationRequest(e) {\n    e.preventDefault();\n    setFirstnameIsRequired(firstName === \"\" ? true : false);\n    setLastnameIsRequired(lastName === \"\" ? true : false);\n    setEmailIsRequired(email === \"\" ? true : false);\n    setPasswordRequired(password === \"\" ? true : false);\n    setContactNoISRequired(contactNo === \"\" ? true : false);\n    const userDetails = {\n      email_address: email,\n      first_name: firstName,\n      last_name: lastName,\n      mobile_number: contactNo,\n      password: password,\n    };\n    const signupRequest = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(userDetails),\n    };\n    fetch(\"/api/v1/signup\", signupRequest)\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.id) {\n          setRegistrationSuccessMsg(\"Registration successful. Please login!\");\n        }\n      });\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <img className=\"logo\" src={Logo} alt=\"logo\" />\n\n        {/* DISPLAY LOGIN/LOGOUT BUTTON ACCORDING TO USERS LOGIN STATUS */}\n        {IsUserLoggedIn ? (\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ float: \"right\" }}\n            onClick={handleLogoutRequest}\n          >\n            Logout\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"default\"\n            style={{ float: \"right\" }}\n            onClick={openOrCloseModal}\n          >\n            Login\n          </Button>\n        )}\n\n        {/* DISPLAY BOOKSHOW BUTTON ON DETAILS SCREEN */}\n        {props.movieId !== undefined && (\n          <span>\n            <Link to={\"/BookShow/\" + props.movieId}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ float: \"right\", marginRight: \"12px\" }}\n              >\n                BOOK SHOW\n              </Button>\n            </Link>\n          </span>\n        )}\n\n        {/* LOGIN/REGISTER MODAL */}\n        <Modal\n          ariaHideApp={false}\n          isOpen={isOpen}\n          onRequestClose={openOrCloseModal}\n          contentLabel=\"Login-Register Modal\"\n          style={modalStyle}\n          centered\n        >\n          <Tabs value={tabValue} onChange={handleTabValueChange}>\n            <Tab label=\"Login\" {...a11yProps(0)} />\n            <Tab label=\"Register\" {...a11yProps(1)} />\n          </Tabs>\n\n          {/* LOGIN FORM */}\n          <TabPanel value={tabValue} index={0}>\n            <div style={{ textAlign: \"center\" }}>\n              <FormControl required>\n                <InputLabel htmlFor=\"userName\">Username</InputLabel>\n                <Input\n                  id=\"username\"\n                  value={username}\n                  onChange={({ target }) => setUsername(target.value)}\n                />\n                {usernameIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <FormControl required>\n                <InputLabel htmlFor=\"password\">Password</InputLabel>\n                <Input\n                  id=\"password\"\n                  value={password}\n                  onChange={({ target }) => setPassword(target.value)}\n                  type=\"password\"\n                />\n                {passwordIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <br />\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={(e) => {\n                  handleLoginRequest(e);\n                }}\n                style={{ float: \"center\" }}\n              >\n                LOGIN\n              </Button>\n            </div>\n          </TabPanel>\n\n          {/* REGISTRATION FORM */}\n          <TabPanel value={tabValue} index={1}>\n            <div style={{ textAlign: \"center\" }}>\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"first-name\">First Name</InputLabel>\n                <Input\n                  id=\"first-name\"\n                  value={firstName}\n                  onChange={({ target }) => setFirstName(target.value)}\n                />\n                {firstnameIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"last-name\">Last Name</InputLabel>\n                <Input\n                  id=\"last-name\"\n                  value={lastName}\n                  onChange={({ target }) => setLastName(target.value)}\n                />\n                {lastnameIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"email-address\">Email</InputLabel>\n                <Input\n                  id=\"email-address\"\n                  value={email}\n                  onChange={({ target }) => setEmail(target.value)}\n                />\n                {emailIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"new-password\">Password</InputLabel>\n                <Input\n                  id=\"new-password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={({ target }) => setPassword(target.value)}\n                />\n                {PasswordIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"contact-no\">Contact No.</InputLabel>\n                <Input\n                  id=\"contact-no\"\n                  value={contactNo}\n                  onChange={({ target }) => setContactNo(target.value)}\n                />\n                {contactNoIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <br />\n              <span>{registrationSuccessMsg}</span>\n              <br />\n              <br />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ float: \"center\" }}\n                type=\"submit\"\n                onClick={(e) => {\n                  handleRegistrationRequest(e);\n                }}\n              >\n                REGISTER\n              </Button>\n            </div>\n          </TabPanel>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n"],"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"},"metadata":{},"sourceType":"module"}