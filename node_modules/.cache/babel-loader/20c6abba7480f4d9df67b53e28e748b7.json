{"ast":null,"code":"var _jsxFileName = \"/Users/divyank/upGrad/Projects/CAPSTONE/Frontend/BookMyConsultationUI/src/screens/doctorList/DoctorList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import \"./Doctor.css\";\n\nimport { Paper, Typography, Button, Grid, Select, MenuItem } from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport Modal from \"react-modal\"; // import DoctorDetails from \"./DoctorDetails\";\n// import BookAppointment from \"./BookAppointment\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DoctorList = () => {\n  _s();\n\n  const [speciality, setSpeciality] = useState(\"\");\n  const [specialityList, setSpecialityList] = useState([]);\n  const [doctorsList, setDoctorList] = useState([]);\n  const [doctor, setDoctor] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null); //get list if specialities\n\n  const getSpeciality = async () => {\n    try {\n      const rawResponse = await fetch(\"http://localhost:8080/doctors/speciality\");\n\n      if (rawResponse.ok) {\n        const response = await rawResponse.json();\n        setSpecialityList(response);\n      } else {\n        const error = new Error();\n        error.message = \"Some Error Occurred\";\n        throw error;\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  }; //get list of doctors\n\n\n  const getDoctorsList = async () => {\n    try {\n      const rawResponse = await fetch(\"http://localhost:8080/doctors\");\n\n      if (rawResponse.ok) {\n        const response = rawResponse.json();\n        setDoctorList(response);\n      } else {\n        const error = new Error();\n        error.message = \"Some error occured\";\n        throw error;\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  }; //get filtered list of doctors\n\n\n  const getFilteredList = async speciality => {\n    const url = \"http://localhost:8080/doctors?speciality=\" + encodeURI(speciality);\n\n    try {\n      const rawResponse = await url;\n\n      if (rawResponse.ok) {\n        const response = rawResponse.json();\n        setDoctorList(response);\n      } else {\n        const error = new Error();\n        error.message = \"Some error occured\";\n        throw error;\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  }; //\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"DoctorList\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 10\n  }, this);\n};\n\n_s(DoctorList, \"ewdmhoc0Y57goLyJtYlbGvFBjOs=\");\n\n_c = DoctorList;\nexport default DoctorList;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoctorList\");","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","Button","Grid","Select","MenuItem","Rating","Modal","DoctorList","speciality","setSpeciality","specialityList","setSpecialityList","doctorsList","setDoctorList","doctor","setDoctor","isModalOpen","setIsModalOpen","modalType","setModalType","getSpeciality","rawResponse","fetch","ok","response","json","error","Error","message","e","alert","getDoctorsList","getFilteredList","url","encodeURI"],"sources":["/Users/divyank/upGrad/Projects/CAPSTONE/Frontend/BookMyConsultationUI/src/screens/doctorList/DoctorList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import \"./Doctor.css\";\nimport {\n  Paper,\n  Typography,\n  Button,\n  Grid,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { Rating } from \"@material-ui/lab\";\nimport Modal from \"react-modal\";\n// import DoctorDetails from \"./DoctorDetails\";\n// import BookAppointment from \"./BookAppointment\";\n\nconst DoctorList = () => {\n  const [speciality, setSpeciality] = useState(\"\");\n  const [specialityList, setSpecialityList] = useState([]);\n  const [doctorsList, setDoctorList] = useState([]);\n  const [doctor, setDoctor] = useState(\"\");\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(null);\n\n  //get list if specialities\n  const getSpeciality = async () => {\n    try {\n      const rawResponse = await fetch(\n        \"http://localhost:8080/doctors/speciality\"\n      );\n      if (rawResponse.ok) {\n        const response = await rawResponse.json();\n        setSpecialityList(response);\n      } else {\n        const error = new Error();\n        error.message = \"Some Error Occurred\";\n        throw error;\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  //get list of doctors\n  const getDoctorsList = async () => {\n    try {\n      const rawResponse = await fetch(\"http://localhost:8080/doctors\");\n      if (rawResponse.ok) {\n        const response = rawResponse.json();\n        setDoctorList(response);\n      } else {\n        const error = new Error();\n        error.message = \"Some error occured\";\n        throw error;\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  //get filtered list of doctors\n  const getFilteredList = async (speciality) => {\n    const url =\n      \"http://localhost:8080/doctors?speciality=\" + encodeURI(speciality);\n    try {\n      const rawResponse = await url;\n      if (rawResponse.ok) {\n        const response = rawResponse.json();\n        setDoctorList(response);\n      } else {\n        const error = new Error();\n        error.message = \"Some error occured\";\n        throw error;\n      }\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  //\n  return <div>DoctorList</div>;\n};\n\nexport default DoctorList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SACEC,KADF,EAEEC,UAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,QANF,QAOO,mBAPP;AAQA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;AACA;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAACe,WAAD,EAAcC,aAAd,IAA+BhB,QAAQ,CAAC,EAAD,CAA7C;EACA,MAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,KAAD,CAA9C;EACA,MAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,IAAD,CAA1C,CANuB,CAQvB;;EACA,MAAMuB,aAAa,GAAG,YAAY;IAChC,IAAI;MACF,MAAMC,WAAW,GAAG,MAAMC,KAAK,CAC7B,0CAD6B,CAA/B;;MAGA,IAAID,WAAW,CAACE,EAAhB,EAAoB;QAClB,MAAMC,QAAQ,GAAG,MAAMH,WAAW,CAACI,IAAZ,EAAvB;QACAd,iBAAiB,CAACa,QAAD,CAAjB;MACD,CAHD,MAGO;QACL,MAAME,KAAK,GAAG,IAAIC,KAAJ,EAAd;QACAD,KAAK,CAACE,OAAN,GAAgB,qBAAhB;QACA,MAAMF,KAAN;MACD;IACF,CAZD,CAYE,OAAOG,CAAP,EAAU;MACVC,KAAK,CAACD,CAAC,CAACD,OAAH,CAAL;IACD;EACF,CAhBD,CATuB,CA2BvB;;;EACA,MAAMG,cAAc,GAAG,YAAY;IACjC,IAAI;MACF,MAAMV,WAAW,GAAG,MAAMC,KAAK,CAAC,+BAAD,CAA/B;;MACA,IAAID,WAAW,CAACE,EAAhB,EAAoB;QAClB,MAAMC,QAAQ,GAAGH,WAAW,CAACI,IAAZ,EAAjB;QACAZ,aAAa,CAACW,QAAD,CAAb;MACD,CAHD,MAGO;QACL,MAAME,KAAK,GAAG,IAAIC,KAAJ,EAAd;QACAD,KAAK,CAACE,OAAN,GAAgB,oBAAhB;QACA,MAAMF,KAAN;MACD;IACF,CAVD,CAUE,OAAOG,CAAP,EAAU;MACVC,KAAK,CAACD,CAAC,CAACD,OAAH,CAAL;IACD;EACF,CAdD,CA5BuB,CA4CvB;;;EACA,MAAMI,eAAe,GAAG,MAAOxB,UAAP,IAAsB;IAC5C,MAAMyB,GAAG,GACP,8CAA8CC,SAAS,CAAC1B,UAAD,CADzD;;IAEA,IAAI;MACF,MAAMa,WAAW,GAAG,MAAMY,GAA1B;;MACA,IAAIZ,WAAW,CAACE,EAAhB,EAAoB;QAClB,MAAMC,QAAQ,GAAGH,WAAW,CAACI,IAAZ,EAAjB;QACAZ,aAAa,CAACW,QAAD,CAAb;MACD,CAHD,MAGO;QACL,MAAME,KAAK,GAAG,IAAIC,KAAJ,EAAd;QACAD,KAAK,CAACE,OAAN,GAAgB,oBAAhB;QACA,MAAMF,KAAN;MACD;IACF,CAVD,CAUE,OAAOG,CAAP,EAAU;MACVC,KAAK,CAACD,CAAC,CAACD,OAAH,CAAL;IACD;EACF,CAhBD,CA7CuB,CA+DvB;;;EACA,oBAAO;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAjED;;GAAMrB,U;;KAAAA,U;AAmEN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}