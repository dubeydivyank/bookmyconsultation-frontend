{"ast":null,"code":"import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","map":{"version":3,"names":["toInteger","getUTCWeekYear","startOfUTCWeek","requiredArgs","startOfUTCWeekYear","dirtyDate","dirtyOptions","arguments","options","locale","localeFirstWeekContainsDate","firstWeekContainsDate","defaultFirstWeekContainsDate","year","firstWeek","Date","setUTCFullYear","setUTCHours","date"],"sources":["/Users/divyank/upGrad/Projects/CAPSTONE/Frontend/BookMyConsultationUI/node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js"],"sourcesContent":["import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,uBAAtB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB,C,CAAqD;AACrD;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,SAA5B,EAAuCC,YAAvC,EAAqD;EAClEH,YAAY,CAAC,CAAD,EAAII,SAAJ,CAAZ;EACA,IAAIC,OAAO,GAAGF,YAAY,IAAI,EAA9B;EACA,IAAIG,MAAM,GAAGD,OAAO,CAACC,MAArB;EACA,IAAIC,2BAA2B,GAAGD,MAAM,IAAIA,MAAM,CAACD,OAAjB,IAA4BC,MAAM,CAACD,OAAP,CAAeG,qBAA7E;EACA,IAAIC,4BAA4B,GAAGF,2BAA2B,IAAI,IAA/B,GAAsC,CAAtC,GAA0CV,SAAS,CAACU,2BAAD,CAAtF;EACA,IAAIC,qBAAqB,GAAGH,OAAO,CAACG,qBAAR,IAAiC,IAAjC,GAAwCC,4BAAxC,GAAuEZ,SAAS,CAACQ,OAAO,CAACG,qBAAT,CAA5G;EACA,IAAIE,IAAI,GAAGZ,cAAc,CAACI,SAAD,EAAYC,YAAZ,CAAzB;EACA,IAAIQ,SAAS,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAhB;EACAD,SAAS,CAACE,cAAV,CAAyBH,IAAzB,EAA+B,CAA/B,EAAkCF,qBAAlC;EACAG,SAAS,CAACG,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;EACA,IAAIC,IAAI,GAAGhB,cAAc,CAACY,SAAD,EAAYR,YAAZ,CAAzB;EACA,OAAOY,IAAP;AACD"},"metadata":{},"sourceType":"module"}