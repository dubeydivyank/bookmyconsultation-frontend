{"ast":null,"code":"var _jsxFileName = \"/Users/divyank/upGrad/Projects/CAPSTONE/Frontend/BookMyConsultationUI/src/common/header/Header.js\",\n    _s = $RefreshSig$();\n\n// import \"./Header.css\";\n// import logo from \"../../assets/logo.jpeg\";\n// import {\n//   Button,\n//   Card,\n//   CardContent,\n//   FormControl,\n//   FormHelperText,\n//   Input,\n//   InputLabel,\n//   Tab,\n//   Tabs,\n//   Typography,\n// } from \"@material-ui/core\";\n// import PropTypes from \"prop-types\";\n// import Modal from \"@material-ui/core/Modal\";\n// import React, { useState, useEffect } from \"react\";\n// //\n// function TabPanel(props) {\n//   const { children, value, index, ...other } = props;\n//   return (\n//     <div\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`simple-tabpanel-${index}`}\n//       aria-labelledby={`simple-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && <Typography component=\"span\">{children}</Typography>}\n//     </div>\n//   );\n// }\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired,\n// };\n// function a11yProps(index) {\n//   return {\n//     id: `simple-tab-${index}`,\n//     \"aria-controls\": `simple-tabpanel-${index}`,\n//   };\n// }\n// //\n// const modalStyle = {\n//   content: {\n//     top: \"50%\",\n//     left: \"50%\",\n//     right: \"auto\",\n//     bottom: \"auto\",\n//     marginRight: \"-50%\",\n//     transform: \"translate(-50%, -50%)\",\n//   },\n// };\n// const Header = () => {\n//   const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n//   useEffect(() => {\n//     const accessToken = sessionStorage.getItem(\"access-token\");\n//     if (accessToken) {\n//       setIsUserLoggedIn(true);\n//     }\n//   }, []);\n//   const [isOpen, setIsOpen] = useState(false);\n//   function openOrCloseModal() {\n//     console.log(\"clicked\");\n//     setIsOpen(!isOpen);\n//   }\n//   const [tabValue, setTabValue] = React.useState(0);\n//   const handleTabValueChange = (event, newValue) => {\n//     setTabValue(newValue);\n//   };\n//   return (\n//     <div>\n//       <div className=\"header-container\">\n//         <img src={logo} alt=\"logo loading...\" className=\"header-logo\" />\n//         {isUserLoggedIn ? (\n//           <Button\n//             variant=\"contained\"\n//             className=\"login-button\"\n//             color=\"secondary\"\n//           >\n//             LOGOUT\n//           </Button>\n//         ) : (\n//           <Button\n//             variant=\"contained\"\n//             className=\"login-button\"\n//             color=\"primary\"\n//             onClick={openOrCloseModal}\n//           >\n//             LOGIN\n//           </Button>\n//         )}\n//         <Modal\n//           ariaHideApp={false}\n//           open={isOpen}\n//           onClose={openOrCloseModal}\n//           contentLabel=\"Login-Register Modal\"\n//           style={modalStyle}\n//           centered\n//         ></Modal>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Header;\nimport React, { useState, useEffect } from \"react\";\nimport \"./Header.css\";\nimport Logo from \"../../assets/logo.jpeg\";\nimport { Button } from \"@material-ui/core\";\nimport Modal from \"react-modal\";\nimport { Tab } from \"@material-ui/core\";\nimport { Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { Typography } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { InputLabel } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Register from \"../../screens/register/Register\";\nimport Login from \"../../screens/login/Login\"; // TABPANEL FROM MATERIAL UI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `simple-tabpanel-${index}`,\n    \"aria-labelledby\": `simple-tab-${index}`,\n    ...other,\n    children: value === index && /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n} // CUSTOM STYLES FOR LOGIN/REGISTER MODAL\n\n\nconst modalStyle = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n}; //HEADER FUNCTION\n\nexport default function Header(props) {\n  _s();\n\n  //OPEN/CLOSE LOGIN-REGISTER MODAL\n  const [isOpen, setIsOpen] = useState(false);\n\n  function openOrCloseModal() {\n    setIsOpen(!isOpen);\n  } //HANDLE MODAL TAB VALUES\n\n\n  const [tabValue, setTabValue] = React.useState(0);\n\n  const handleTabValueChange = (event, newValue) => {\n    setTabValue(newValue);\n  }; //SET USER'S LOGIN STATUS\n\n\n  const [IsUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  useEffect(() => {\n    const accessToken = sessionStorage.getItem(\"access-token\");\n\n    if (accessToken) {\n      setIsUserLoggedIn(true);\n    }\n  }, []); //UPDATE USER'S LOGIN STATUS & CLOSE MODAL\n\n  const updateLoginStatus = loggedIn => {\n    setIsUserLoggedIn(loggedIn);\n\n    if (isOpen) {\n      openOrCloseModal();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"header-logo\",\n        src: Logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), IsUserLoggedIn ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        style: {\n          float: \"right\"\n        },\n        onClick: handleLogoutRequest,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        style: {\n          float: \"right\"\n        },\n        onClick: openOrCloseModal,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        ariaHideApp: false,\n        isOpen: isOpen,\n        onRequestClose: openOrCloseModal,\n        contentLabel: \"Login-Register Modal\",\n        style: modalStyle,\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: tabValue,\n          onChange: handleTabValueChange,\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Login\",\n            ...a11yProps(0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            label: \"Register\",\n            ...a11yProps(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 0,\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: tabValue,\n          index: 1,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"first-name\",\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"first-name\",\n                value: firstName,\n                onChange: _ref => {\n                  let {\n                    target\n                  } = _ref;\n                  return setFirstName(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), firstnameIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"last-name\",\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"last-name\",\n                value: lastName,\n                onChange: _ref2 => {\n                  let {\n                    target\n                  } = _ref2;\n                  return setLastName(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this), lastnameIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"email-address\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"email-address\",\n                value: email,\n                onChange: _ref3 => {\n                  let {\n                    target\n                  } = _ref3;\n                  return setEmail(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), emailIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"new-password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"new-password\",\n                type: \"password\",\n                value: password,\n                onChange: _ref4 => {\n                  let {\n                    target\n                  } = _ref4;\n                  return setPassword(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), PasswordIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"contact-no\",\n                children: \"Contact No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                id: \"contact-no\",\n                value: contactNo,\n                onChange: _ref5 => {\n                  let {\n                    target\n                  } = _ref5;\n                  return setContactNo(target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), contactNoIsRequired && /*#__PURE__*/_jsxDEV(FormHelperText, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required-error\",\n                  children: \"required\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: registrationSuccessMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              style: {\n                float: \"center\"\n              },\n              type: \"submit\",\n              onClick: e => {\n                handleRegistrationRequest(e);\n              },\n              children: \"REGISTER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"1nt9ZhJfoGhGphM+Dz9y2jUiOTA=\");\n\n_c2 = Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Logo","Button","Modal","Tab","Tabs","PropTypes","Typography","FormControl","Input","InputLabel","Link","FormHelperText","Register","Login","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","modalStyle","content","top","left","right","bottom","marginRight","transform","Header","isOpen","setIsOpen","openOrCloseModal","tabValue","setTabValue","handleTabValueChange","event","newValue","IsUserLoggedIn","setIsUserLoggedIn","accessToken","sessionStorage","getItem","updateLoginStatus","loggedIn","float","handleLogoutRequest","textAlign","firstName","target","setFirstName","firstnameIsRequired","lastName","setLastName","lastnameIsRequired","email","setEmail","emailIsRequired","password","setPassword","PasswordIsRequired","contactNo","setContactNo","contactNoIsRequired","registrationSuccessMsg","e","handleRegistrationRequest"],"sources":["/Users/divyank/upGrad/Projects/CAPSTONE/Frontend/BookMyConsultationUI/src/common/header/Header.js"],"sourcesContent":["// import \"./Header.css\";\n// import logo from \"../../assets/logo.jpeg\";\n// import {\n//   Button,\n//   Card,\n//   CardContent,\n//   FormControl,\n//   FormHelperText,\n//   Input,\n//   InputLabel,\n//   Tab,\n//   Tabs,\n//   Typography,\n// } from \"@material-ui/core\";\n// import PropTypes from \"prop-types\";\n\n// import Modal from \"@material-ui/core/Modal\";\n// import React, { useState, useEffect } from \"react\";\n\n// //\n// function TabPanel(props) {\n//   const { children, value, index, ...other } = props;\n//   return (\n//     <div\n//       role=\"tabpanel\"\n//       hidden={value !== index}\n//       id={`simple-tabpanel-${index}`}\n//       aria-labelledby={`simple-tab-${index}`}\n//       {...other}\n//     >\n//       {value === index && <Typography component=\"span\">{children}</Typography>}\n//     </div>\n//   );\n// }\n\n// TabPanel.propTypes = {\n//   children: PropTypes.node,\n//   index: PropTypes.any.isRequired,\n//   value: PropTypes.any.isRequired,\n// };\n\n// function a11yProps(index) {\n//   return {\n//     id: `simple-tab-${index}`,\n//     \"aria-controls\": `simple-tabpanel-${index}`,\n//   };\n// }\n// //\n// const modalStyle = {\n//   content: {\n//     top: \"50%\",\n//     left: \"50%\",\n//     right: \"auto\",\n//     bottom: \"auto\",\n//     marginRight: \"-50%\",\n//     transform: \"translate(-50%, -50%)\",\n//   },\n// };\n\n// const Header = () => {\n//   const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n//   useEffect(() => {\n//     const accessToken = sessionStorage.getItem(\"access-token\");\n//     if (accessToken) {\n//       setIsUserLoggedIn(true);\n//     }\n//   }, []);\n\n//   const [isOpen, setIsOpen] = useState(false);\n//   function openOrCloseModal() {\n//     console.log(\"clicked\");\n//     setIsOpen(!isOpen);\n//   }\n\n//   const [tabValue, setTabValue] = React.useState(0);\n//   const handleTabValueChange = (event, newValue) => {\n//     setTabValue(newValue);\n//   };\n//   return (\n//     <div>\n//       <div className=\"header-container\">\n//         <img src={logo} alt=\"logo loading...\" className=\"header-logo\" />\n//         {isUserLoggedIn ? (\n//           <Button\n//             variant=\"contained\"\n//             className=\"login-button\"\n//             color=\"secondary\"\n//           >\n//             LOGOUT\n//           </Button>\n//         ) : (\n//           <Button\n//             variant=\"contained\"\n//             className=\"login-button\"\n//             color=\"primary\"\n//             onClick={openOrCloseModal}\n//           >\n//             LOGIN\n//           </Button>\n//         )}\n//         <Modal\n//           ariaHideApp={false}\n//           open={isOpen}\n//           onClose={openOrCloseModal}\n//           contentLabel=\"Login-Register Modal\"\n//           style={modalStyle}\n//           centered\n//         ></Modal>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Header;\nimport React, { useState, useEffect } from \"react\";\nimport \"./Header.css\";\nimport Logo from \"../../assets/logo.jpeg\";\nimport { Button } from \"@material-ui/core\";\nimport Modal from \"react-modal\";\nimport { Tab } from \"@material-ui/core\";\nimport { Tabs } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { Typography } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { InputLabel } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Register from \"../../screens/register/Register\";\nimport Login from \"../../screens/login/Login\";\n\n// TABPANEL FROM MATERIAL UI\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Typography component=\"span\">{children}</Typography>}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\n// CUSTOM STYLES FOR LOGIN/REGISTER MODAL\nconst modalStyle = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\n//HEADER FUNCTION\nexport default function Header(props) {\n  //OPEN/CLOSE LOGIN-REGISTER MODAL\n  const [isOpen, setIsOpen] = useState(false);\n  function openOrCloseModal() {\n    setIsOpen(!isOpen);\n  }\n\n  //HANDLE MODAL TAB VALUES\n  const [tabValue, setTabValue] = React.useState(0);\n  const handleTabValueChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  //SET USER'S LOGIN STATUS\n  const [IsUserLoggedIn, setIsUserLoggedIn] = useState(false);\n  useEffect(() => {\n    const accessToken = sessionStorage.getItem(\"access-token\");\n    if (accessToken) {\n      setIsUserLoggedIn(true);\n    }\n  }, []);\n\n  //UPDATE USER'S LOGIN STATUS & CLOSE MODAL\n  const updateLoginStatus = (loggedIn) => {\n    setIsUserLoggedIn(loggedIn);\n    if (isOpen) {\n      openOrCloseModal();\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"header-container\">\n        <img className=\"header-logo\" src={Logo} alt=\"logo\" />\n\n        {/* DISPLAY LOGIN/LOGOUT BUTTON ACCORDING TO USERS LOGIN STATUS */}\n        {IsUserLoggedIn ? (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ float: \"right\" }}\n            onClick={handleLogoutRequest}\n          >\n            Logout\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ float: \"right\" }}\n            onClick={openOrCloseModal}\n          >\n            Login\n          </Button>\n        )}\n\n        {/* LOGIN/REGISTER MODAL */}\n        <Modal\n          ariaHideApp={false}\n          isOpen={isOpen}\n          onRequestClose={openOrCloseModal}\n          contentLabel=\"Login-Register Modal\"\n          style={modalStyle}\n          centered\n        >\n          <Tabs value={tabValue} onChange={handleTabValueChange}>\n            <Tab label=\"Login\" {...a11yProps(0)} />\n            <Tab label=\"Register\" {...a11yProps(1)} />\n          </Tabs>\n\n          {/* LOGIN FORM */}\n          <TabPanel value={tabValue} index={0}>\n            <Login />\n          </TabPanel>\n\n          {/* REGISTRATION FORM */}\n          <TabPanel value={tabValue} index={1}>\n            <div style={{ textAlign: \"center\" }}>\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"first-name\">First Name</InputLabel>\n                <Input\n                  id=\"first-name\"\n                  value={firstName}\n                  onChange={({ target }) => setFirstName(target.value)}\n                />\n                {firstnameIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"last-name\">Last Name</InputLabel>\n                <Input\n                  id=\"last-name\"\n                  value={lastName}\n                  onChange={({ target }) => setLastName(target.value)}\n                />\n                {lastnameIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"email-address\">Email</InputLabel>\n                <Input\n                  id=\"email-address\"\n                  value={email}\n                  onChange={({ target }) => setEmail(target.value)}\n                />\n                {emailIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"new-password\">Password</InputLabel>\n                <Input\n                  id=\"new-password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={({ target }) => setPassword(target.value)}\n                />\n                {PasswordIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <FormControl required={true}>\n                <InputLabel htmlFor=\"contact-no\">Contact No.</InputLabel>\n                <Input\n                  id=\"contact-no\"\n                  value={contactNo}\n                  onChange={({ target }) => setContactNo(target.value)}\n                />\n                {contactNoIsRequired && (\n                  <FormHelperText>\n                    <span className=\"required-error\">required</span>\n                  </FormHelperText>\n                )}\n              </FormControl>\n              <br />\n              <br />\n              <span>{registrationSuccessMsg}</span>\n              <br />\n              <br />\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ float: \"center\" }}\n                type=\"submit\"\n                onClick={(e) => {\n                  handleRegistrationRequest(e);\n                }}\n              >\n                REGISTER\n              </Button>\n            </div>\n            <Register />\n          </TabPanel>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n"],"mappingsgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,KAAP,MAAkB,2BAAlB,C,CAEA;;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EACvB,MAAM;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,KAAnB;IAA0B,GAAGC;EAA7B,IAAuCJ,KAA7C;EACA,oBACE;IACE,IAAI,EAAC,UADP;IAEE,MAAM,EAAEE,KAAK,KAAKC,KAFpB;IAGE,EAAE,EAAG,mBAAkBA,KAAM,EAH/B;IAIE,mBAAkB,cAAaA,KAAM,EAJvC;IAAA,GAKMC,KALN;IAAA,UAOGF,KAAK,KAAKC,KAAV,iBAAmB,QAAC,UAAD;MAAY,SAAS,EAAC,MAAtB;MAAA,UAA8BF;IAA9B;MAAA;MAAA;MAAA;IAAA;EAPtB;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;KAbQF,Q;AAeTA,QAAQ,CAACM,SAAT,GAAqB;EACnBJ,QAAQ,EAAEX,SAAS,CAACgB,IADD;EAEnBH,KAAK,EAAEb,SAAS,CAACiB,GAAV,CAAcC,UAFF;EAGnBN,KAAK,EAAEZ,SAAS,CAACiB,GAAV,CAAcC;AAHF,CAArB;;AAMA,SAASC,SAAT,CAAmBN,KAAnB,EAA0B;EACxB,OAAO;IACLO,EAAE,EAAG,cAAaP,KAAM,EADnB;IAEL,iBAAkB,mBAAkBA,KAAM;EAFrC,CAAP;AAID,C,CAED;;;AACA,MAAMQ,UAAU,GAAG;EACjBC,OAAO,EAAE;IACPC,GAAG,EAAE,KADE;IAEPC,IAAI,EAAE,KAFC;IAGPC,KAAK,EAAE,MAHA;IAIPC,MAAM,EAAE,MAJD;IAKPC,WAAW,EAAE,MALN;IAMPC,SAAS,EAAE;EANJ;AADQ,CAAnB,C,CAWA;;AACA,eAAe,SAASC,MAAT,CAAgBnB,KAAhB,EAAuB;EAAA;;EACpC;EACA,MAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBtC,QAAQ,CAAC,KAAD,CAApC;;EACA,SAASuC,gBAAT,GAA4B;IAC1BD,SAAS,CAAC,CAACD,MAAF,CAAT;EACD,CALmC,CAOpC;;;EACA,MAAM,CAACG,QAAD,EAAWC,WAAX,IAA0B1C,KAAK,CAACC,QAAN,CAAe,CAAf,CAAhC;;EACA,MAAM0C,oBAAoB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;IAChDH,WAAW,CAACG,QAAD,CAAX;EACD,CAFD,CAToC,CAapC;;;EACA,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsC9C,QAAQ,CAAC,KAAD,CAApD;EACAC,SAAS,CAAC,MAAM;IACd,MAAM8C,WAAW,GAAGC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAApB;;IACA,IAAIF,WAAJ,EAAiB;MACfD,iBAAiB,CAAC,IAAD,CAAjB;IACD;EACF,CALQ,EAKN,EALM,CAAT,CAfoC,CAsBpC;;EACA,MAAMI,iBAAiB,GAAIC,QAAD,IAAc;IACtCL,iBAAiB,CAACK,QAAD,CAAjB;;IACA,IAAId,MAAJ,EAAY;MACVE,gBAAgB;IACjB;EACF,CALD;;EAOA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,kBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,aAAf;QAA6B,GAAG,EAAErC,IAAlC;QAAwC,GAAG,EAAC;MAA5C;QAAA;QAAA;QAAA;MAAA,QADF,EAIG2C,cAAc,gBACb,QAAC,MAAD;QACE,OAAO,EAAC,WADV;QAEE,KAAK,EAAC,WAFR;QAGE,KAAK,EAAE;UAAEO,KAAK,EAAE;QAAT,CAHT;QAIE,OAAO,EAAEC,mBAJX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADa,gBAUb,QAAC,MAAD;QACE,OAAO,EAAC,WADV;QAEE,KAAK,EAAC,SAFR;QAGE,KAAK,EAAE;UAAED,KAAK,EAAE;QAAT,CAHT;QAIE,OAAO,EAAEb,gBAJX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAdJ,eAyBE,QAAC,KAAD;QACE,WAAW,EAAE,KADf;QAEE,MAAM,EAAEF,MAFV;QAGE,cAAc,EAAEE,gBAHlB;QAIE,YAAY,EAAC,sBAJf;QAKE,KAAK,EAAEX,UALT;QAME,QAAQ,MANV;QAAA,wBAQE,QAAC,IAAD;UAAM,KAAK,EAAEY,QAAb;UAAuB,QAAQ,EAAEE,oBAAjC;UAAA,wBACE,QAAC,GAAD;YAAK,KAAK,EAAC,OAAX;YAAA,GAAuBhB,SAAS,CAAC,CAAD;UAAhC;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,GAAD;YAAK,KAAK,EAAC,UAAX;YAAA,GAA0BA,SAAS,CAAC,CAAD;UAAnC;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QARF,eAcE,QAAC,QAAD;UAAU,KAAK,EAAEc,QAAjB;UAA2B,KAAK,EAAE,CAAlC;UAAA,uBACE,QAAC,KAAD;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QAdF,eAmBE,QAAC,QAAD;UAAU,KAAK,EAAEA,QAAjB;UAA2B,KAAK,EAAE,CAAlC;UAAA,wBACE;YAAK,KAAK,EAAE;cAAEc,SAAS,EAAE;YAAb,CAAZ;YAAA,wBACE,QAAC,WAAD;cAAa,QAAQ,EAAE,IAAvB;cAAA,wBACE,QAAC,UAAD;gBAAY,OAAO,EAAC,YAApB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE,QAAC,KAAD;gBACE,EAAE,EAAC,YADL;gBAEE,KAAK,EAAEC,SAFT;gBAGE,QAAQ,EAAE;kBAAA,IAAC;oBAAEC;kBAAF,CAAD;kBAAA,OAAgBC,YAAY,CAACD,MAAM,CAACrC,KAAR,CAA5B;gBAAA;cAHZ;gBAAA;gBAAA;gBAAA;cAAA,QAFF,EAOGuC,mBAAmB,iBAClB,QAAC,cAAD;gBAAA,uBACE;kBAAM,SAAS,EAAC,gBAAhB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QARJ;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAcE;cAAA;cAAA;cAAA;YAAA,QAdF,eAeE,QAAC,WAAD;cAAa,QAAQ,EAAE,IAAvB;cAAA,wBACE,QAAC,UAAD;gBAAY,OAAO,EAAC,WAApB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE,QAAC,KAAD;gBACE,EAAE,EAAC,WADL;gBAEE,KAAK,EAAEC,QAFT;gBAGE,QAAQ,EAAE;kBAAA,IAAC;oBAAEH;kBAAF,CAAD;kBAAA,OAAgBI,WAAW,CAACJ,MAAM,CAACrC,KAAR,CAA3B;gBAAA;cAHZ;gBAAA;gBAAA;gBAAA;cAAA,QAFF,EAOG0C,kBAAkB,iBACjB,QAAC,cAAD;gBAAA,uBACE;kBAAM,SAAS,EAAC,gBAAhB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QARJ;YAAA;cAAA;cAAA;cAAA;YAAA,QAfF,eA4BE;cAAA;cAAA;cAAA;YAAA,QA5BF,eA6BE,QAAC,WAAD;cAAa,QAAQ,EAAE,IAAvB;cAAA,wBACE,QAAC,UAAD;gBAAY,OAAO,EAAC,eAApB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE,QAAC,KAAD;gBACE,EAAE,EAAC,eADL;gBAEE,KAAK,EAAEC,KAFT;gBAGE,QAAQ,EAAE;kBAAA,IAAC;oBAAEN;kBAAF,CAAD;kBAAA,OAAgBO,QAAQ,CAACP,MAAM,CAACrC,KAAR,CAAxB;gBAAA;cAHZ;gBAAA;gBAAA;gBAAA;cAAA,QAFF,EAOG6C,eAAe,iBACd,QAAC,cAAD;gBAAA,uBACE;kBAAM,SAAS,EAAC,gBAAhB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QARJ;YAAA;cAAA;cAAA;cAAA;YAAA,QA7BF,eA0CE;cAAA;cAAA;cAAA;YAAA,QA1CF,eA2CE,QAAC,WAAD;cAAa,QAAQ,EAAE,IAAvB;cAAA,wBACE,QAAC,UAAD;gBAAY,OAAO,EAAC,cAApB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE,QAAC,KAAD;gBACE,EAAE,EAAC,cADL;gBAEE,IAAI,EAAC,UAFP;gBAGE,KAAK,EAAEC,QAHT;gBAIE,QAAQ,EAAE;kBAAA,IAAC;oBAAET;kBAAF,CAAD;kBAAA,OAAgBU,WAAW,CAACV,MAAM,CAACrC,KAAR,CAA3B;gBAAA;cAJZ;gBAAA;gBAAA;gBAAA;cAAA,QAFF,EAQGgD,kBAAkB,iBACjB,QAAC,cAAD;gBAAA,uBACE;kBAAM,SAAS,EAAC,gBAAhB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QATJ;YAAA;cAAA;cAAA;cAAA;YAAA,QA3CF,eAyDE;cAAA;cAAA;cAAA;YAAA,QAzDF,eA0DE,QAAC,WAAD;cAAa,QAAQ,EAAE,IAAvB;cAAA,wBACE,QAAC,UAAD;gBAAY,OAAO,EAAC,YAApB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE,QAAC,KAAD;gBACE,EAAE,EAAC,YADL;gBAEE,KAAK,EAAEC,SAFT;gBAGE,QAAQ,EAAE;kBAAA,IAAC;oBAAEZ;kBAAF,CAAD;kBAAA,OAAgBa,YAAY,CAACb,MAAM,CAACrC,KAAR,CAA5B;gBAAA;cAHZ;gBAAA;gBAAA;gBAAA;cAAA,QAFF,EAOGmD,mBAAmB,iBAClB,QAAC,cAAD;gBAAA,uBACE;kBAAM,SAAS,EAAC,gBAAhB;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA,QARJ;YAAA;cAAA;cAAA;cAAA;YAAA,QA1DF,eAuEE;cAAA;cAAA;cAAA;YAAA,QAvEF,eAwEE;cAAA;cAAA;cAAA;YAAA,QAxEF,eAyEE;cAAA,UAAOC;YAAP;cAAA;cAAA;cAAA;YAAA,QAzEF,eA0EE;cAAA;cAAA;cAAA;YAAA,QA1EF,eA2EE;cAAA;cAAA;cAAA;YAAA,QA3EF,eA4EE,QAAC,MAAD;cACE,OAAO,EAAC,WADV;cAEE,KAAK,EAAC,SAFR;cAGE,KAAK,EAAE;gBAAEnB,KAAK,EAAE;cAAT,CAHT;cAIE,IAAI,EAAC,QAJP;cAKE,OAAO,EAAGoB,CAAD,IAAO;gBACdC,yBAAyB,CAACD,CAAD,CAAzB;cACD,CAPH;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QA5EF;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAyFE,QAAC,QAAD;YAAA;YAAA;YAAA;UAAA,QAzFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAzBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6ID;;GA3KuBpC,M;;MAAAA,M"},"metadata":{},"sourceType":"module"}