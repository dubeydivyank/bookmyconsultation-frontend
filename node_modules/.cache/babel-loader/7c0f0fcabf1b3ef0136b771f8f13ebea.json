{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { Button } from \"@material-ui/core\";\n// import { FormControl } from \"@material-ui/core\";\n// import { Input } from \"@material-ui/core\";\n// import { InputLabel } from \"@material-ui/core\";\n// import FormHelperText from \"@material-ui/core/FormHelperText\";\n// const Login = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [usernameIsRequired, setUsernameIsRequired] = useState(false);\n//   const [passwordIsRequired, setPasswordIsRequired] = useState(false);\n//   function handleLoginRequest(e) {\n//     e.preventDefault();\n//     setUsernameIsRequired(username === \"\" ? true : false);\n//     setPasswordIsRequired(password === \"\" ? true : false);\n//     const userCredentials = window.btoa(username + \":\" + password);\n//     const loginRequest = {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\",\n//         authorization: \"Basic \" + userCredentials,\n//       },\n//     };\n//     fetch(\"/api/v1/auth/login\", loginRequest)\n//       .then((response) => {\n//         if (!response.ok) {\n//           return response.json();\n//         }\n//         return response;\n//       })\n//       .then((response) => {\n//         if (response.headers) {\n//           sessionStorage.setItem(\n//             \"access-token\",\n//             response.headers.get(\"access-token\")\n//           );\n//           // updateLoginStatus(true);\n//         } else {\n//           console.log(response.body);\n//         }\n//       });\n//   }\n//   //FUNCTION FOR LOGGING OUT\n//   function handleLogoutRequest() {\n//     const logoutRequest = {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\n//       },\n//     };\n//     fetch(\"/api/v1/auth/logout\", logoutRequest).then((response) => {\n//       if (response.status === 200) {\n//         sessionStorage.removeItem(\"access-token\");\n//         // updateLoginStatus(false);\n//       } else {\n//         console.log(\"Invalid access token\");\n//       }\n//     });\n//   }\n//   // const updateLoginStatus = (loggedIn) => {\n//   //   setIsUserLoggedIn(loggedIn);\n//   //   if (isOpen) {\n//   //     openOrCloseModal();\n//   //   }\n//   // };\n//   return (\n//     <div>\n//       <div style={{ textAlign: \"center\" }}>\n//         <FormControl required>\n//           <InputLabel htmlFor=\"userName\">Username</InputLabel>\n//           <Input\n//             id=\"username\"\n//             value={username}\n//             onChange={({ target }) => setUsername(target.value)}\n//           />\n//           {usernameIsRequired && (\n//             <FormHelperText>\n//               <span className=\"required-error\">required</span>\n//             </FormHelperText>\n//           )}\n//         </FormControl>\n//         <br />\n//         <FormControl required>\n//           <InputLabel htmlFor=\"password\">Password</InputLabel>\n//           <Input\n//             id=\"password\"\n//             value={password}\n//             onChange={({ target }) => setPassword(target.value)}\n//             type=\"password\"\n//           />\n//           {passwordIsRequired && (\n//             <FormHelperText>\n//               <span className=\"required-error\">required</span>\n//             </FormHelperText>\n//           )}\n//         </FormControl>\n//         <br />\n//         <br />\n//         <Button\n//           type=\"submit\"\n//           variant=\"contained\"\n//           color=\"primary\"\n//           onClick={(e) => {\n//             handleLoginRequest(e);\n//           }}\n//           style={{ float: \"center\" }}\n//         >\n//           LOGIN\n//         </Button>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Login;","map":{"version":3,"names":[],"sources":["/Users/divyank/upGrad/Projects/CAPSTONE/Frontend/BookMyConsultationUI/src/screens/login/Login.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Button } from \"@material-ui/core\";\n// import { FormControl } from \"@material-ui/core\";\n// import { Input } from \"@material-ui/core\";\n// import { InputLabel } from \"@material-ui/core\";\n// import FormHelperText from \"@material-ui/core/FormHelperText\";\n// const Login = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [usernameIsRequired, setUsernameIsRequired] = useState(false);\n//   const [passwordIsRequired, setPasswordIsRequired] = useState(false);\n\n//   function handleLoginRequest(e) {\n//     e.preventDefault();\n//     setUsernameIsRequired(username === \"\" ? true : false);\n//     setPasswordIsRequired(password === \"\" ? true : false);\n//     const userCredentials = window.btoa(username + \":\" + password);\n//     const loginRequest = {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\",\n//         authorization: \"Basic \" + userCredentials,\n//       },\n//     };\n//     fetch(\"/api/v1/auth/login\", loginRequest)\n//       .then((response) => {\n//         if (!response.ok) {\n//           return response.json();\n//         }\n//         return response;\n//       })\n//       .then((response) => {\n//         if (response.headers) {\n//           sessionStorage.setItem(\n//             \"access-token\",\n//             response.headers.get(\"access-token\")\n//           );\n//           // updateLoginStatus(true);\n//         } else {\n//           console.log(response.body);\n//         }\n//       });\n//   }\n\n//   //FUNCTION FOR LOGGING OUT\n//   function handleLogoutRequest() {\n//     const logoutRequest = {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         authorization: \"Bearer \" + sessionStorage.getItem(\"access-token\"),\n//       },\n//     };\n//     fetch(\"/api/v1/auth/logout\", logoutRequest).then((response) => {\n//       if (response.status === 200) {\n//         sessionStorage.removeItem(\"access-token\");\n//         // updateLoginStatus(false);\n//       } else {\n//         console.log(\"Invalid access token\");\n//       }\n//     });\n//   }\n\n//   // const updateLoginStatus = (loggedIn) => {\n//   //   setIsUserLoggedIn(loggedIn);\n//   //   if (isOpen) {\n//   //     openOrCloseModal();\n//   //   }\n//   // };\n\n//   return (\n//     <div>\n//       <div style={{ textAlign: \"center\" }}>\n//         <FormControl required>\n//           <InputLabel htmlFor=\"userName\">Username</InputLabel>\n//           <Input\n//             id=\"username\"\n//             value={username}\n//             onChange={({ target }) => setUsername(target.value)}\n//           />\n//           {usernameIsRequired && (\n//             <FormHelperText>\n//               <span className=\"required-error\">required</span>\n//             </FormHelperText>\n//           )}\n//         </FormControl>\n//         <br />\n//         <FormControl required>\n//           <InputLabel htmlFor=\"password\">Password</InputLabel>\n//           <Input\n//             id=\"password\"\n//             value={password}\n//             onChange={({ target }) => setPassword(target.value)}\n//             type=\"password\"\n//           />\n//           {passwordIsRequired && (\n//             <FormHelperText>\n//               <span className=\"required-error\">required</span>\n//             </FormHelperText>\n//           )}\n//         </FormControl>\n//         <br />\n//         <br />\n//         <Button\n//           type=\"submit\"\n//           variant=\"contained\"\n//           color=\"primary\"\n//           onClick={(e) => {\n//             handleLoginRequest(e);\n//           }}\n//           style={{ float: \"center\" }}\n//         >\n//           LOGIN\n//         </Button>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Login;\n"],"mappings},"metadata":{},"sourceType":"module"}